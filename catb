#!/usr/bin/env python
#
# author: graemeball@googlemail.com, 2013
# license: GPL

import sys


nargs = len(sys.argv)
if nargs < 2:
    print("\n  Usage: catb <filename1> <filename2> ... <filenameN>")
    print("\n    prints byte column for each file, pausing at diff")
    sys.exit(0)


def main():
    """
    For each file specified, print a stream of bytes in hex formatted
    columns, pausing when a difference between the files is found
    """
    files = []
    for narg in range(nargs - 1):
        files.append(open(sys.argv[narg + 1], 'rb'))
    
    nbytes = 0
    file_bytes = read_bytes(files)
    while any(file_bytes):
        byte_str = "  {0:10d}:   ".format(nbytes)
        nbytes += 1
        byte_str += "    ".join([byte_string(b) for b in file_bytes])
        if len(set(file_bytes)) == 1:
            print(byte_str)
        else:
            print(byte_str + "    <= different")
            #raw_input("...Enter to continue")
        file_bytes = read_bytes(files)

    print("\ntotal nbytes: {0}".format(nbytes))


def byte_string(byte_val):
    """
    Return string representation of byte, or N! for length 0 string
    """
    if byte_val == "":
        return "N!"
    else:
        return "{0:x}".format(ord(byte_val))


def read_bytes(files):
    """
    Return a list of the next byte for each file in a file list
    """
    file_bytes = []
    for f in files:
        a_byte = f.read(1)
        file_bytes.append(a_byte)
    return file_bytes


if __name__=='__main__':
    main()
